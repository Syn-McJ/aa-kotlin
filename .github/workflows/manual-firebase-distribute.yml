name: Manual Firebase Distribution

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'main'
        type: string
      qa_group:
        description: 'QA group to distribute to'
        required: true
        default: 'self'
        type: choice
        options:
          - self
          - inner
      release_notes:
        description: 'Release notes'
        required: false
        type: string
        default: ''

jobs:
  build-and-distribute:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    env:
      ANDROID_KEYSTORE_PATH: ${{ github.workspace }}/keystore.jks
      FIREBASE_CREDENTIALS_FILE: ${{ github.workspace }}/firebase_credentials.json
      FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: 'gradle'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android SDK packages
        shell: bash
        run: |
          sdkmanager --install "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Prepare keystore
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        shell: bash
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > "${ANDROID_KEYSTORE_PATH}"

      - name: Write Firebase service account
        shell: bash
        run: |
          echo "${{ secrets.FIREBASE_CREDENTIALS_JSON }}" > "${FIREBASE_CREDENTIALS_FILE}"

      - name: Install gems
        shell: bash
        run: bundle install --path vendor/bundle

      - name: Build and Distribute
        shell: bash
        run: |
          bundle exec fastlane android firebase_distribute qa_group:${{ inputs.qa_group }} release_notes:"${{ inputs.release_notes }}"